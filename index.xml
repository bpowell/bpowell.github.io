<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Brandon's Dev Blog</title><link>https://www.brandonsdevblog.me/</link><description>Recent content on Brandon's Dev Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Brandon Powell 2018</copyright><lastBuildDate>Sat, 17 Feb 2018 23:06:25 -0500</lastBuildDate><atom:link href="https://www.brandonsdevblog.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Just Release</title><link>https://www.brandonsdevblog.me/post/just-release/</link><pubDate>Thu, 07 Feb 2019 13:12:05 -0400</pubDate><guid>https://www.brandonsdevblog.me/post/just-release/</guid><description>Release Early And Release Often This is an extension to my previous post about Automate All the Things. You should really read that before you continue. In the last section of that post, I mentioned about automating pushing code to production. Well I have left that job and was never able to fully automate all the things. The place that I&amp;rsquo;m at now has really taught me the importance of the phrase &amp;ldquo;release early and release often&amp;rdquo;.</description></item><item><title>Automate All the Things</title><link>https://www.brandonsdevblog.me/post/automate-all-the-things/</link><pubDate>Sat, 19 May 2018 13:12:05 -0400</pubDate><guid>https://www.brandonsdevblog.me/post/automate-all-the-things/</guid><description>Forward This year I was supposed to go to Open Apereo 2018 and do a talk on devops and uPortal. Unfortunately I am not able to go, but I had some people contact me about writing something up about the talk. This post will focus more on the automation section of what I was going to present about.
Introduction One of the things that devops helps with is automating parts of the development cycle.</description></item><item><title>Projects</title><link>https://www.brandonsdevblog.me/projects/</link><pubDate>Sat, 17 Feb 2018 23:06:25 -0500</pubDate><guid>https://www.brandonsdevblog.me/projects/</guid><description>goedit While I am a huge fan of vim, I saw a really cool tutorial on how to make a text editor in C. I thought it would make for a great project to learn more Go. goedit uses an array structure for storing and modifying contents of a file. Currently it only supports editing one file at a time. It supports a few vim commands for the users coming from vim.</description></item><item><title>Talks</title><link>https://www.brandonsdevblog.me/talks/</link><pubDate>Sat, 17 Feb 2018 23:05:57 -0500</pubDate><guid>https://www.brandonsdevblog.me/talks/</guid><description>Spinnaker Summmit 2019 Spinnaker Plugins YouTube
Spinnaker Meetup 04/03/2019 Advanced Pipelines YouTube
Spinnaker Meetup 02/27/2019 Spinnaker Roadmap YouTube
Delivering Applications with Spinnaker PHX Meetup 02/21/2019 Spinnaker &amp;amp; K8s YouTube
She&amp;rsquo;s Coding Seattle 02/07/2019 Your First Pipeline Video coming soon!
GDG Cloud Meetup - Montreal 12/18/2018 Your First Pipeline YouTube
Bay Area Spinnaker Meetup 12/5/2018 First Pipeline YouTube
DevOps Exchange San Francisco November Meetup 11/15/2018 Using Spinnaker With EKS YouTube</description></item><item><title>About</title><link>https://www.brandonsdevblog.me/about/</link><pubDate>Sat, 17 Feb 2018 22:10:23 -0500</pubDate><guid>https://www.brandonsdevblog.me/about/</guid><description>You can find me at:
Github Twitter Currently I am working as a DevOps Engineer at Project Ronin, a healthcare company. I am in the process of redoing the CI/CD process to improve and build more trust in deployments of our software.
I was a Software Engineer at Armory. The team that I was on was leading the charge of developing a plugin system for Spinnaker, an open source CI/CD platform created by Netflix and Google.</description></item><item><title>Git Workflow</title><link>https://www.brandonsdevblog.me/post/git-workflow/</link><pubDate>Fri, 16 Feb 2018 21:25:42 -0500</pubDate><guid>https://www.brandonsdevblog.me/post/git-workflow/</guid><description>You Got Your New Task, Now What? Before code is even written, an issue has to be created in the project’s code repository. The title of the issue should be rather short, but descriptive. Important details should be added to the description. Make sure to assign yourself to the issue if you are the one doing the work. If the project you are working on uses milestones and labels, be sure to apply those as well.</description></item></channel></rss>