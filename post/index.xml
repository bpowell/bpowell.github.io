<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Brandon's Dev Blog</title><link>http://brandonsdevblog.me/post/</link><description>Recent content in Posts on Brandon's Dev Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Brandon Powell 2018</copyright><lastBuildDate>Thu, 07 Feb 2019 13:12:05 -0400</lastBuildDate><atom:link href="http://brandonsdevblog.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Just Release</title><link>http://brandonsdevblog.me/post/just-release/</link><pubDate>Thu, 07 Feb 2019 13:12:05 -0400</pubDate><guid>http://brandonsdevblog.me/post/just-release/</guid><description>Release Early And Release Often This is an extension to my previous post about Automate All the Things. You should really read that before you continue. In the last section of that post, I mentioned about automating pushing code to production. Well I have left that job and was never able to fully automate all the things. The place that I&amp;rsquo;m at now has really taught me the importance of the phrase &amp;ldquo;release early and release often&amp;rdquo;.</description></item><item><title>Automate All the Things</title><link>http://brandonsdevblog.me/post/automate-all-the-things/</link><pubDate>Sat, 19 May 2018 13:12:05 -0400</pubDate><guid>http://brandonsdevblog.me/post/automate-all-the-things/</guid><description>Forward This year I was supposed to go to Open Apereo 2018 and do a talk on devops and uPortal. Unfortunately I am not able to go, but I had some people contact me about writing something up about the talk. This post will focus more on the automation section of what I was going to present about.
Introduction One of the things that devops helps with is automating parts of the development cycle.</description></item><item><title>Git Workflow</title><link>http://brandonsdevblog.me/post/git-workflow/</link><pubDate>Fri, 16 Feb 2018 21:25:42 -0500</pubDate><guid>http://brandonsdevblog.me/post/git-workflow/</guid><description>You Got Your New Task, Now What? Before code is even written, an issue has to be created in the project’s code repository. The title of the issue should be rather short, but descriptive. Important details should be added to the description. Make sure to assign yourself to the issue if you are the one doing the work. If the project you are working on uses milestones and labels, be sure to apply those as well.</description></item></channel></rss>